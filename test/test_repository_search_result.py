# coding: utf-8

"""
    REFORMERS Digital Twin: Model Repository API

    This API provides access to the REFORMERS Digital Twin Model Repository.  _Funding acknowledgement_: The [REFORMERS project](https://reformers-energyvalleys.eu) has received funding from the European Unionâ€™s research and innovation programme Horizon Europe under the [Grant Agreement No.101136211](https://cordis.europa.eu/project/id/101136211) 

    The version of the OpenAPI document: v0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from reformers_model_repo_client.models.repository_search_result import RepositorySearchResult

class TestRepositorySearchResult(unittest.TestCase):
    """RepositorySearchResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RepositorySearchResult:
        """Test RepositorySearchResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RepositorySearchResult`
        """
        model = RepositorySearchResult()
        if include_optional:
            return RepositorySearchResult(
                items = [
                    reformers_model_repo_client.models.repository_component_info.repository component info(
                        id = 'bW9kZWwtZ2VuZXJhdG9yczpiY2UxN2M2YjU4MzcyZTcxMDc4Y2EzOThkZTM5OGE0OA', 
                        repository = 'model-generators', 
                        format = 'docker', 
                        group = '', 
                        name = 'generator1', 
                        version = 'latest-dev', 
                        assets = [
                            reformers_model_repo_client.models.asset_info.asset info(
                                download_url = 'https://reformers-dev.ait.ac.at/repository/model-generators/v2/generator1/manifests/latest-dev', 
                                path = 'v2/generator1/manifests/latest-dev', 
                                id = 'bW9kZWwtZ2VuZXJhdG9yczowZTgyNzc5MDcxODY1MGI1N2RmODgzZThjNDM2NmJiYw', 
                                repository = 'model-generators', 
                                format = 'docker', 
                                checksum = {"sha1":"4e6c790bb91b94639374730b571a5f7920ea39cf","sha256":"f74d85f0f07ebe00ca0f2fd78f63014dae9a48fa3db476a643b06934501dffbc"}, 
                                content_type = 'application/vnd.docker.distribution.manifest.v2+json', 
                                last_modified = '2024-10-16T14:58:16.505+00:00', 
                                last_downloaded = '2024-10-16T15:27:10.923+00:00', 
                                uploader = 'admin', 
                                uploader_ip = '172.18.0.1', 
                                file_size = 524, 
                                blob_created = '', )
                            ], )
                    ],
                continuation_token = ''
            )
        else:
            return RepositorySearchResult(
        )
        """

    def testRepositorySearchResult(self):
        """Test RepositorySearchResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
